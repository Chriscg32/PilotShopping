name: Deploy ButterflyBlue Creations

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Run linting
      run: |
        flake8 app/ --count --select=E9,F63,F7,F82 --show-source --statistics
        black --check app/
        isort --check-only app/
    
    - name: Run type checking
      run: mypy app/
    
    - name: Run unit tests
      run: |
        pytest tests/unit/ -v --cov=app --cov-report=xml
        
    - name: Run integration tests
      run: |
        pytest tests/integration/ -v
        
    - name: Run chaos tests
      run: |
        pytest tests/chaos/ -v
        
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        
    - name: Security scan
      run: |
        bandit -r app/
        safety check
        
    - name: Load testing
      run: |
        k6 run tests/load/basic_load_test.js

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Build Docker image
      run: |
        docker build -t butterflyblue:${{ github.sha }} .
        docker tag butterflyblue:${{ github.sha }} butterflyblue:latest
    
    - name: Deploy to staging
      run: |
        # Deploy to staging environment
        docker-compose -f docker-compose.staging.yml up -d
        
    - name: Run E2E tests on staging
      run: |
        npm install
        npx cypress run --config baseUrl=https://staging.butterflyblue.com
        
    - name: Launch readiness check
      run: |
        python scripts/launch_readiness.py --environment=staging
        
    - name: Deploy to production
      if: success()
      run: |
        # Deploy to production only if all tests pass
        docker-compose -f docker-compose.prod.yml up -d
        
    - name: Post-deployment verification
      run: |
        python scripts/verify_deployment.py --environment=production
        
    - name: Notify team
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: 'ButterflyBlue deployment completed successfully! ðŸ¦‹'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}